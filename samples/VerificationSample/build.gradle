apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion(Versions.compileSdk)
    buildToolsVersion "$Versions.buildTools"

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    signingConfigs {
        release {
            keyAlias keyAliasSinch
            keyPassword keyPasswordSinch
            storeFile keyFileSinch
            storePassword storePasswordSinch
        }
    }

    sourceSets {
        main.res.srcDirs += "$project.rootDir/samples/common/res"
    }

    defaultConfig {
        applicationId "com.sinch.sinchverification"
        minSdkVersion(Versions.minSdk)
        targetSdkVersion(Versions.targetSdk)
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "mode", "apienv"
    productFlavors {
        internal {
            dimension "mode"

            buildConfigField "String", "APP_KEY_PROD", "\"$testAppProductionKey\""
            buildConfigField "String", "APP_KEY_PROD_APSE", "\"$testAppProductionApseKey\""
            buildConfigField "String", "APP_KEY_PROD_EUC1", "\"$testAppProductionEUCKey\""
            buildConfigField "String", "APP_KEY_FTEST1", "\"$testAppFtest1Key\""
            buildConfigField "String", "APP_KEY_FTEST2", "\"$testAppFtest2Key\""

            buildConfigField "String", "API_BASE_URL_PROD", "\"https://verificationapi-v1.sinch.com/\""
            buildConfigField "String", "API_BASE_URL_PROD_EUC1", "\"https://dc-euc1-std.verification.api.sinch.com/\""
            buildConfigField "String", "API_BASE_URL_PROD_APSE1", "\"https://dc-apse1-std.verification.api.sinch.com/\""
            buildConfigField "String", "API_BASE_URL_FTEST1", "\"https://ft1-verification.api.sinchlab.com/\""
            buildConfigField "String", "API_BASE_URL_FTEST2", "\"https://ft2-verification.api.sinchlab.com/\""

        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        // To check for a certain build type, use variant.buildType.name == "<buildType>"
        if (names.contains("internal") && !names.contains("production")) {
            // Gradle ignores any variants that satisfy the conditions above.
            // In our case it we don't need any other flavors other then 'production' - endpoint can be changed manually
            setIgnore(true)
        }
    }

    buildTypes {
        release {
            debuggable true
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':library:verification-all')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    implementation "androidx.appcompat:appcompat:${Versions.appCompat}"
    implementation "androidx.core:core-ktx:${Versions.ktx}"
    implementation "com.google.android.material:material:${Versions.material}"
    implementation "androidx.constraintlayout:constraintlayout:${Versions.constraintLayout}"
    implementation "androidx.navigation:navigation-fragment-ktx:${Versions.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${Versions.navigation}"
    implementation "com.squareup.okhttp3:okhttp:${Versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${Versions.okhttp}"
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation "androidx.preference:preference-ktx:1.1.1"

    debugImplementation 'com.facebook.soloader:soloader:0.9.0'
    debugImplementation 'com.facebook.flipper:flipper:0.41.0'
    debugImplementation 'com.facebook.flipper:flipper-network-plugin:0.41.0'

    releaseImplementation 'com.facebook.flipper:flipper-noop:0.41.0'

    testImplementation "junit:junit:${Versions.jUnit}"

    androidTestImplementation "androidx.test.ext:junit:${Versions.jUnitAndroidX}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${Versions.espresso}"
}
